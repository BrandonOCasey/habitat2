#!/usr/bin/env bash

NVM_DIR="$HOME/.nvm"


cat <<\EOF
export NVM_DIR="$HOME/.nvm"

# wrap around nvm so that we only source it when we need it
nvm() {

	if [ ! -d "$NVM_DIR" ]; then
		read -p "Install nvm (y/n)?" choice
		case "$choice" in
			y|Y ) echo "Installing";;
			n|N ) echo "Bye Bye" && return ;;
			* ) echo "invalid" ;;
		esac

		curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash
	fi

	if [ -s "$NVM_DIR/nvm.sh" ]; then
		unset -f nvm
		export NVM_DIR="$NVM_DIR"
		. "$NVM_DIR/nvm.sh"
		nvm "$@"
	else
		echo "nvm is not installed!" 2>&1
		return
	fi
}

# use the default nvm if nvm is installed
# that way the user won't have to set anything in their
# .bash_profile
use_default_nvm() {
	local nvm_alias_default="$NVM_DIR/alias/default"
	local nvm_default=$(cat "$nvm_alias_default" 2>/dev/null)

	# NVM not installed
	if [ -z "$NVM_DIR" ] || [ ! -d "$NVM_DIR" ]; then
		return
	fi

	# no default set
	if [ -f "$nvm_alias_default" ] || [ -z "$nvm_default" ]; then
		echo "Please use 'nvm alias default <version>' so we can set set the default version" 2>&1
		echo "in your path and save you time every terminal login!" 2>&1
		return
	fi

	local nvm_default_path="$NVM_DIR/versions/node/$default/bin/"

	# default not installed
	if [ ! -d "$nvm_default_path" ]; then
		echo "nvm default $nvm_default is not installed, going to install and use" 2>&1
		nvm install "$nvm_default"
		nvm use "$nvm_default"
	fi

	# default bin dir is already in the path
	if [ -n "$(echo "$PATH" | grep "$nvm_default_path")" ]; then
		return
	fi

	export PATH="$nvm_default_path:$PATH"
}

use_default_nvm
unset -f use_default_nvm
EOF
