#!/usr/bin/env bash

cat <<\EOF
export NVM_DIR="$HOME/.nvm"

# wrap around nvm so that we only source it when we need it
nvm() {

	if [ ! -d "$NVM_DIR" ]; then
		read -rp "Install nvm (y/n)?" choice
		case "$choice" in
			y|Y) echo "Installing";;
			n|N) echo "Bye Bye" && return ;;
			*) echo "invalid" ;;
		esac

		curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
	fi

	if [ -s "$NVM_DIR/nvm.sh" ]; then
		unset -f nvm
		export NVM_DIR="$NVM_DIR"
		. "$NVM_DIR/nvm.sh"
		nvm "$@"
	else
		echo "nvm is not installed!"
		return
	fi
}


# use the default nvm if nvm is installed
# that way the user won't have to set anything in their
# .bash_profile
use_default_nvm() {
	# NVM not installed
	if [ -z "$NVM_DIR" ] || [ ! -d "$NVM_DIR" ]; then
		return
	fi

	local nvm_alias_default="$NVM_DIR/alias/default"
	local nvm_default="$(cat "$nvm_alias_default")"

	# no default set
	if [ ! -f "$nvm_alias_default" ] || [ -z "$nvm_default" ]; then
		echo "Please use 'nvm alias default <version>' and install that version so that it can be used on login"
		return
	fi

	if ! nvm which "$nvm_default" >/dev/null 2>&1; then
		echo "Please install your default using: nvm install '$nvm_default' && nvm use '$nvm_default'"
		echo "After intial install this will be done automatically"
		return
	fi

	nvm use "$nvm_default" >/dev/null 2>&1
}

use_default_nvm
unset -f use_default_nvm
EOF
