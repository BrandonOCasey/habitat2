#!/usr/bin/env bash

current_plugin_dir="$1"; shift
dotfiles_dir="$1"; shift

bash_completion="/etc/bash_completion"
bash_completion_two="/share/bash-completion/bash_completion"
brew_prefix=""

if type -t brew 2>&1 >/dev/null; then
  brew_prefix="$(brew --prefix)"
fi


if [ -f "$bash_completion_two" ]; then
  file="$bash_completion_two"
elif [ -f "${brew_prefix}${bash_completion_two}" ]; then
  file="${brew_prefix}${bash_completion_two}"
elif [ -f "$bash_completion" ]; then
  file="$bash_completion"
elif [ -f "${brew_prefix}${bash_completion}" ]; then
  file="${brew_prefix}${bash_completion}"
fi

if [ -n "$file" ]; then
  echo 'exec 3>&1 1>/dev/null'
  echo 'exec 4>&2 2>/dev/null'
  cat "$file"
  echo 'exec 1>&3 3>&-'
  echo 'exec 2>&4 4>&-'
fi

if type -t npm 2>&1 >/dev/null; then
  npm completion
fi

if type -t yo 2>&1 >/dev/null; then
   echo <<EOF
###-begin-yo-completion-###
if type complete &>/dev/null; then
  _yo_completion () {
    local words cword
    if type _get_comp_words_by_ref &>/dev/null; then
      _get_comp_words_by_ref -n = -n @ -w words -i cword
    else
      cword="$COMP_CWORD"
      words=("${COMP_WORDS[@]}")
    fi

    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$cword" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           yo-complete completion -- "${words[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _yo_completion yo
fi
###-end-yo-completion-###
EOF
fi

if [ -f "$brew_prefix/Library/Contributions/brew_bash_completion.sh" ]; then
  cat "$brew_prefix/Library/Contributions/brew_bash_completion.sh"
fi

if [ -d "$NVM_DIR" ]; then
  cat "$NVM_DIR/bash_completion"
fi

