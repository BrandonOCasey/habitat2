#==============================================================
# => Bash Prompt
#
# Make your bash prompt look awesome, and make its colors
# differ if you are the root user
#==============================================================

# Define Colors: Stolen From https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt
if [ -z "$COLORTERM" ]; then
    COLORTERM=""
fi
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM="gnome-256color"
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM="xterm-256color"
fi

if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
        RED=$(tput setaf 196)
        ORANGE=$(tput setaf 202)
        YELLOW=$(tput setaf 226)
        GREEN=$(tput setaf 34)
        BLUE=$(tput setaf 21)
        LIGHT_BLUE=$(tput setaf 51)
        PURPLE=$(tput setaf 58)
        PINK=$(tput setaf 171)
        WHITE=$(tput setaf 255)
        GRAY=$(tput setaf 244)
        GREY=$(tput setaf 244)
        BLACK=$(tput setaf 256)
        BROWN=$(tput setaf 130)
        CYAN=$(tput setaf 39)
    else
        RED=$(tput setaf 1)
        ORANGE=""
        YELLOW=$(tput setaf 3)
        GREEN=$(tput setaf 2)
        BLUE=$(tput setaf 4)
        LIGHT_BLUE=""
        PURPLE=""
        PINK=$(tput setaf 5)
        WHITE=$(tput setaf 7)
        GRAY=""
        GREY=""
        BLACK=$(tput setaf 0)
        BROWN=""
        CYAN=$(tput setaf 6)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
    DIM=$(tput dim)
else
    RED='\e[0;31m'
    ORANGE='\033[1;33m'
    YELLOW='\e[0;33m'
    GREEN='\033[1;32m'
    BLUE=""
    LIGHT_BLUE=""
    PURPLE='\033[1;35m'
    PINK=""
    WHITE='\033[1;37m'
    GRAY=""
    GREY=""
    BLACK='\e[0;30m'
    BROWN=""
    CYAN='\e[0;36m'

    # Extras
    BOLD=""
    RESET='\033[m'
    DIM=""
fi

# Fancy Shell
if [ $(id -u) -ne 0 ]; then
    COLOR_TWO=$LIGHT_BLUE
    COLOR_THREE=$GREY
    COLOR_FOUR=$CYAN
    COLOR_FIVE=$LIGHT_BLUE
else
    COLOR_TWO=$RED
    COLOR_THREE=$ORANGE
    COLOR_FOUR=$YELLOW
    COLOR_FIVE=$BROWN
fi


get_git_branch() {
  # On branches, this will return the branch name
  # On non-branches, (no branch)
  ref="$(git symbolic-ref HEAD 2> /dev/null | sed -e 's/refs\/heads\///')"
  if [ -n "$ref" ]; then
    echo " [$ref]"
  else
    echo ""
  fi
}

get_smiley() {
  if [ $? = 0 ]; then
      echo "${LIGHT_BLUE}:)${RESET}"
  else
    echo "${RED}:(${RESET}"
  fi
}

PS1=""

PS1+="\[\$(get_smiley)\]"     # Smiley face
PS1+="\[${WHITE}\]"           # Start the white color
PS1+=" \T "                   # Time
PS1+="\[${COLOR_THREE}\]"     # Start Color Three
PS1+="\u"                     # User
PS1+="\[${WHITE}\]"           # Start Color White
PS1+="@"                      # Just an at symbol
PS1+="\[${COLOR_FOUR}\]"      # Start Color 4
PS1+="\h"                     # Current hostname
PS1+="\[${WHITE}\]"           # Start Color White
PS1+=":"                      # colon
PS1+="\[${WHITE}\]"           # Start Color White
PS1+="\w"                     # Full pwd (working directory)
PS1+="\[${COLOR_THREE}\]"     # Start Color White
PS1+="\[\$(get_git_branch)\]" # current git branch or n/a
PS1+="\[${RESET}\]"           # Reset Color
PS1+="\n"                     # New Line
PS1+="\[${COLOR_FIVE}\]"      # Color five
PS1+="\$"                     # dollar character
PS1+="\[${RESET}\]"           # Reset color
PS1+=" "                      # space
