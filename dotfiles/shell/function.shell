#==============================================================
# => Bash Functions
#
# Aliases for commonly used things that are too big to put into
# an alias and functions that do special things that you find
# yourself repeating all the time
#==============================================================

file_sizes() {
  local dir="."
  if [ -n "$1" ]; then
    dir="$1"
  fi

  find "$dir" | xargs stat -f '%z %N' | sort -n
}

rm_empty() {
  local search_in="./*"
  if [ -n "$1" ]; then
    search_in="$1"
  fi

  for i in $search_in; do
    if [ ! -s "$i" ];then
      rm -rf "$i"
    fi
  done
}


nkill() {
  if [ "$#" -lt "1" ]; then
    echo '  Usage:'
    echo '    nkill <process_name> ...'
    echo
    echo '  Example:'
    echo '    nkill httpd ssh-agent'
    echo
    return 1
  fi

  pgrep -fl "$@"
  if [ "$?" = "1" ]; then
    echo 'No processes match'
    return 1
  fi
  echo 'Hit [Enter] to pkill, [Ctrl+C] to abort'
  read -r && sudo pkill -9 -f "$@"
}

m_valgrind() {
  if command -v "valgrind" >/dev/null 2>&1; then
    echo "valgrind is not installed"
  fi

  if [ "$#" -ne "2" ]; then
    echo 'Usage:'
    echo '  m_valgrind log_output binary'
    echo
    echo 'Example:'
    echo '  m_valgrind /tmp/http_valgrind.log httpd'
    echo
    return 1
  fi
  sudo valgrind --leak-check=full --show-reachable=yes --log-file="$1" --trace-redir=yes -v "$2"
}

tcpd() {
  local pcap="/tmp/${RANDOM}.pcap"
  sudo test
  (sudo tcpdump -q -s 0 -i any -w "$pcap" >/dev/null 2>&1 &)

  if [ ! "$?" = "0" ]; then
    echo 'tcpdump failed to start'
    return 1
  fi

  finish() {
    sudo pkill -f "$pcap"
    sudo chown "$(id -u -n)":"$(id -g -n)" "$pcap"
    echo "$pcap"
    trap - SIGINT
    trap
    unset -f finish
  }

  trap "echo && finish && return 0" SIGINT
  printf 'Hit [Any Key] to kill tcpdump'
  read -r
  finish
 }

tcpx() {
  if [ -z "$1" ]; then
    echo "Must define path to transfer file to like:"
    echo "0.0.0.0:/Users/bcasey/Desktop"
    return 1
  fi

  local dest="$1"; shift
  local pcap=""
  pcap="$(tcpd | tee /dev/tty | sed 's~Hit \[Any Key\] to kill tcpdump~~')"

  if [ ! -f "$pcap" ]; then
    return 1
  fi

  rsync --remove-source-files -aPz "$pcap" "$dest"
}

npml() {
  while [ "$#" -gt 0 ]; do
    [ -d "$1" ] && rm -rf "$1/node_modules" && npm link "$1" && echo "linked $1" || echo "could not link $1"
    shift;
  done
}

